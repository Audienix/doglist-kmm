package com.audienix.doglist.android.ui.theme

import androidx.compose.runtime.Composable
import androidx.compose.runtime.Immutable
import androidx.compose.runtime.ReadOnlyComposable
import androidx.compose.runtime.staticCompositionLocalOf
import androidx.compose.ui.graphics.Color

@Immutable
data class ColorPalette(
    val primary: Color = Color.Unspecified,
    val onPrimary: Color = Color.Unspecified,
    val primaryContainer: Color = Color.Unspecified,
    val onPrimaryContainer: Color = Color.Unspecified,
    val secondary: Color = Color.Unspecified,
    val onSecondary: Color = Color.Unspecified,
    val secondaryContainer: Color = Color.Unspecified,
    val onSecondaryContainer: Color = Color.Unspecified,
    val tertiary: Color = Color.Unspecified,
    val onTertiary: Color = Color.Unspecified,
    val tertiaryContainer: Color = Color.Unspecified,
    val onTertiaryContainer: Color = Color.Unspecified,
    val error: Color = Color.Unspecified,
    val onError: Color = Color.Unspecified,
    val error60: Color = Color.Unspecified,
    val errorContainer: Color = Color.Unspecified,
    val onErrorContainer: Color = Color.Unspecified,
    val outline: Color = Color.Unspecified,
    val background: Color = Color.Unspecified,
    val onBackground: Color = Color.Unspecified,
    val surface: Color = Color.Unspecified,
    val onSurface: Color = Color.Unspecified,
    val surfaceVariant: Color = Color.Unspecified,
    val onSurfaceVariant: Color = Color.Unspecified,
    val inverseSurface: Color = Color.Unspecified,
    val inverseOnSurface: Color = Color.Unspecified,
    val inversePrimary: Color = Color.Unspecified,
    val surfaceTint: Color = Color.Unspecified,
    val outlineVariant: Color = Color.Unspecified,
    val scrim: Color = Color.Unspecified,
    val surfaceTintColor: Color = Color.Unspecified,
    val primaryFixed: Color = Color.Unspecified,
    val onPrimaryFixed: Color = Color.Unspecified,
    val primaryFixedDim: Color = Color.Unspecified,
    val onPrimaryFixedVariant: Color = Color.Unspecified,
    val secondaryFixed: Color = Color.Unspecified,
    val onSecondaryFixed: Color = Color.Unspecified,
    val secondaryFixedDim: Color = Color.Unspecified,
    val onSecondaryFixedVariant: Color = Color.Unspecified,
    val tertiaryFixed: Color = Color.Unspecified,
    val onTertiaryFixed: Color = Color.Unspecified,
    val tertiaryFixedDim: Color = Color.Unspecified,
    val onTertiaryFixedVariant: Color = Color.Unspecified,
    val surfaceContainerHighest: Color = Color.Unspecified,
    val surfaceContainerHigh: Color = Color.Unspecified,
    val surfaceContainer: Color = Color.Unspecified,
    val surfaceContainerLow: Color = Color.Unspecified,
    val surfaceContainerLowest: Color = Color.Unspecified,
    val surfaceDim: Color = Color.Unspecified,
    val surfaceBright: Color = Color.Unspecified
)

val LocalColorPalette = staticCompositionLocalOf { ColorPalette() }

val MaterialColorPalette: ColorPalette
    @Composable
    @ReadOnlyComposable
    get() = LocalColorPalette.current

val LightColorPalette = ColorPalette(
    primary = md_theme_light_primary,
    onPrimary = md_theme_light_onPrimary,
    primaryContainer = md_theme_light_primaryContainer,
    onPrimaryContainer = md_theme_light_onPrimaryContainer,
    secondary = md_theme_light_secondary,
    onSecondary = md_theme_light_onSecondary,
    secondaryContainer = md_theme_light_secondaryContainer,
    onSecondaryContainer = md_theme_light_onSecondaryContainer,
    tertiary = md_theme_light_tertiary,
    onTertiary = md_theme_light_onTertiary,
    tertiaryContainer = md_theme_light_tertiaryContainer,
    onTertiaryContainer = md_theme_light_onTertiaryContainer,
    error = md_theme_light_error,
    onError = md_theme_light_onError,
    error60 = md_theme_error60,
    errorContainer = md_theme_light_errorContainer,
    onErrorContainer = md_theme_light_onErrorContainer,
    outline = md_theme_light_outline,
    background = md_theme_light_background,
    onBackground = md_theme_light_onBackground,
    surface = md_theme_light_surface,
    onSurface = md_theme_light_onSurface,
    surfaceVariant = md_theme_light_surfaceVariant,
    onSurfaceVariant = md_theme_light_onSurfaceVariant,
    inverseSurface = md_theme_light_inverseSurface,
    inverseOnSurface = md_theme_light_inverseOnSurface,
    inversePrimary = md_theme_light_inversePrimary,
    surfaceTint = md_theme_light_surfaceTint,
    outlineVariant = md_theme_light_outlineVariant,
    scrim = md_theme_light_scrim,
    surfaceTintColor = md_theme_light_surface_tint_color,
    primaryFixed = md_theme_light_primary_fixed,
    onPrimaryFixed = md_theme_light_on_primary_fixed,
    primaryFixedDim = md_theme_light_primary_fixed_dim,
    onPrimaryFixedVariant = md_theme_light_on_primary_fixed_variant,
    secondaryFixed = md_theme_light_secondary_fixed,
    onSecondaryFixed = md_theme_light_on_secondary_fixed,
    secondaryFixedDim = md_theme_light_secondary_fixed_dim,
    onSecondaryFixedVariant = md_theme_light_on_secondary_fixed_variant,
    tertiaryFixed = md_theme_light_tertiary_fixed,
    onTertiaryFixed = md_theme_light_on_tertiary_fixed,
    tertiaryFixedDim = md_theme_light_tertiary_fixed_dim,
    onTertiaryFixedVariant = md_theme_light_on_tertiary_fixed_variant,
    surfaceContainerHighest = md_theme_light_surface_container_highest,
    surfaceContainerHigh = md_theme_light_surface_container_high,
    surfaceContainer = md_theme_light_surface_container,
    surfaceContainerLow = md_theme_light_surface_container_low,
    surfaceContainerLowest = md_theme_light_surface_container_lowest,
    surfaceDim = md_theme_light_surface_dim,
    surfaceBright = md_theme_light_surface_bright
)

val DarkColorPalette = ColorPalette(
    primary = md_theme_dark_primary,
    onPrimary = md_theme_dark_onPrimary,
    primaryContainer = md_theme_dark_primaryContainer,
    onPrimaryContainer = md_theme_dark_onPrimaryContainer,
    secondary = md_theme_dark_secondary,
    onSecondary = md_theme_dark_onSecondary,
    secondaryContainer = md_theme_dark_secondaryContainer,
    onSecondaryContainer = md_theme_dark_onSecondaryContainer,
    tertiary = md_theme_dark_tertiary,
    onTertiary = md_theme_dark_onTertiary,
    tertiaryContainer = md_theme_dark_tertiaryContainer,
    onTertiaryContainer = md_theme_dark_onTertiaryContainer,
    error = md_theme_dark_error,
    onError = md_theme_dark_onError,
    errorContainer = md_theme_dark_errorContainer,
    error60 = md_theme_error60,
    onErrorContainer = md_theme_dark_onErrorContainer,
    outline = md_theme_dark_outline,
    background = md_theme_dark_background,
    onBackground = md_theme_dark_onBackground,
    surface = md_theme_dark_surface,
    onSurface = md_theme_dark_onSurface,
    surfaceVariant = md_theme_dark_surfaceVariant,
    onSurfaceVariant = md_theme_dark_onSurfaceVariant,
    inverseSurface = md_theme_dark_inverseSurface,
    inverseOnSurface = md_theme_dark_inverseOnSurface,
    inversePrimary = md_theme_dark_inversePrimary,
    surfaceTint = md_theme_dark_surfaceTint,
    outlineVariant = md_theme_dark_outlineVariant,
    scrim = md_theme_dark_scrim,
    surfaceTintColor = md_theme_dark_surface_tint_color,
    primaryFixed = md_theme_dark_primary_fixed,
    onPrimaryFixed = md_theme_dark_on_primary_fixed,
    primaryFixedDim = md_theme_dark_primary_fixed_dim,
    onPrimaryFixedVariant = md_theme_dark_on_primary_fixed_variant,
    secondaryFixed = md_theme_dark_secondary_fixed,
    onSecondaryFixed = md_theme_dark_on_secondary_fixed,
    secondaryFixedDim = md_theme_dark_secondary_fixed_dim,
    onSecondaryFixedVariant = md_theme_dark_on_secondary_fixed_variant,
    tertiaryFixed = md_theme_dark_tertiary_fixed,
    onTertiaryFixed = md_theme_dark_on_tertiary_fixed,
    tertiaryFixedDim = md_theme_dark_tertiary_fixed_dim,
    onTertiaryFixedVariant = md_theme_dark_on_tertiary_fixed_variant,
    surfaceContainerHighest = md_theme_dark_surface_container_highest,
    surfaceContainerHigh = md_theme_dark_surface_container_high,
    surfaceContainer = md_theme_dark_surface_container,
    surfaceContainerLow = md_theme_dark_surface_container_low,
    surfaceContainerLowest = md_theme_dark_surface_container_lowest,
    surfaceDim = md_theme_dark_surface_dim,
    surfaceBright = md_theme_dark_surface_bright
)
